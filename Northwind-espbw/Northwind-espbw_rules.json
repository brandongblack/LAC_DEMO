[
  {
    "ts": "2016-08-23T23:28:58.995",
    "entity_name": "nw:Customers",
    "attribute_name": null,
    "prop1": null,
    "prop2": null,
    "prop3": null,
    "prop4": "javascript",
    "prop5": null,
    "rule_text1": "return row.Balance <= row.CreditLimit;",
    "rule_text2": "Transaction cannot be completed - Balance ({Balance|#,##0.00}) exceeds Credit Limit ({CreditLimit|#,##0.00})",
    "rule_text3": null,
    "rule_text4": null,
    "rule_text5": null,
    "predicate": null,
    "name": "",
    "auto_name": "Validation return row.Balance <= row.CreditLimit;",
    "verbs": null,
    "comments": "Observe Error message insertion points {}",
    "active": true,
    "sqlable": false,
    "ruletype_ident": 5,
    "@metadata": {
      "href": "http://apimlac.virtualpresales.lab:8080/rest/abl/admin/v2/admin:rules/2423",
      "checksum": "A:28dcebe86c6a61e1"
    }
  },
  {
    "ts": "2016-08-23T23:28:59.004",
    "entity_name": "nw:Customers",
    "attribute_name": "Balance",
    "prop1": null,
    "prop2": null,
    "prop3": null,
    "prop4": null,
    "prop5": null,
    "rule_text1": "OrdersList",
    "rule_text2": "null === ShippedDate",
    "rule_text3": "AmountTotal",
    "rule_text4": null,
    "rule_text5": null,
    "predicate": null,
    "name": "adjust the balance to be the sum(OrdersList.AmountTotal) for unshipped orders",
    "auto_name": "Derive Balance as sum(OrdersList.AmountTotal where null === ShippedDate)",
    "verbs": null,
    "comments": "Adjusts Balance by *reacting* to changes in OrdersList.AmountTotal,\nincluding other changes noted in Table/Column help.",
    "active": true,
    "sqlable": false,
    "ruletype_ident": 1,
    "@metadata": {
      "href": "http://apimlac.virtualpresales.lab:8080/rest/abl/admin/v2/admin:rules/2424",
      "checksum": "A:28dcebe86c6a61e1"
    }
  },
  {
    "ts": "2016-08-23T23:28:59.006",
    "entity_name": "nw:Order Details",
    "attribute_name": "Amount",
    "prop1": null,
    "prop2": null,
    "prop3": null,
    "prop4": "javascript",
    "prop5": null,
    "rule_text1": "var amount = row.Quantity * row.UnitPrice;  // row is the OrderDetails row\nif (row.Quantity !== 0) {\n    amount = amount * (100 - 100*row.Discount) / 100;\n}\nreturn amount;\n",
    "rule_text2": null,
    "rule_text3": null,
    "rule_text4": null,
    "rule_text5": null,
    "predicate": null,
    "name": "Amount as Quantity * UnitPrice -- (JavaScript snippet)",
    "auto_name": "Derive Amount as var amount = row.Quantity * row.UnitPrice;  // row is the OrderDetails row\nif (row.Quantity !== 0) {\n    amount = amount * (100 - ...",
    "verbs": null,
    "comments": "JavaScript is used to express logic,\nproviding access to libraries for date arithmetic (etc.), or your own.\nReactive logic recomputes Amount in response to changes Quantity, Price (and, per logic chaining, the ProductId)",
    "active": true,
    "sqlable": false,
    "ruletype_ident": 3,
    "@metadata": {
      "href": "http://apimlac.virtualpresales.lab:8080/rest/abl/admin/v2/admin:rules/2425",
      "checksum": "A:28dcebe86c6a61e1"
    }
  },
  {
    "ts": "2016-08-23T23:28:59.007",
    "entity_name": "nw:Order Details",
    "attribute_name": "UnitPrice",
    "prop1": null,
    "prop2": null,
    "prop3": null,
    "prop4": null,
    "prop5": null,
    "rule_text1": "FK_Order_Details_Products",
    "rule_text2": "UnitPrice",
    "rule_text3": null,
    "rule_text4": null,
    "rule_text5": null,
    "predicate": null,
    "name": "copy price from product, unaffected by price changes",
    "auto_name": "Derive UnitPrice as parentcopy(FK_Order_Details_Products.UnitPrice)",
    "verbs": null,
    "comments": "Obtain the price from the product.\nCopy means subsequent changes to Products.UnitPrice do not affect existing Order Details.\n  You could also use a formula for row.Products.UnitPrice if you *do* want to cascade changes.\n\nYou can change the Rule name (at the top) to be more friendly, or specify a more suitable Foreign Key name, such as Product__OrderDetails.",
    "active": true,
    "sqlable": false,
    "ruletype_ident": 4,
    "@metadata": {
      "href": "http://apimlac.virtualpresales.lab:8080/rest/abl/admin/v2/admin:rules/2426",
      "checksum": "A:28dcebe86c6a61e1"
    }
  },
  {
    "ts": "2016-08-23T23:28:59.009",
    "entity_name": "nw:Orders",
    "attribute_name": "AmountTotal",
    "prop1": null,
    "prop2": null,
    "prop3": null,
    "prop4": null,
    "prop5": null,
    "rule_text1": "Order_DetailsList",
    "rule_text2": null,
    "rule_text3": "Amount",
    "rule_text4": null,
    "rule_text5": null,
    "predicate": null,
    "name": "",
    "auto_name": "Derive AmountTotal as sum(Order_DetailsList.Amount)",
    "verbs": null,
    "comments": "Adjust the AmountTotal to be the sum(Order_DetailsList.Amount)\nObserve how simple rules chain to solve complex, multi-table transactions.",
    "active": true,
    "sqlable": false,
    "ruletype_ident": 1,
    "@metadata": {
      "href": "http://apimlac.virtualpresales.lab:8080/rest/abl/admin/v2/admin:rules/2427",
      "checksum": "A:28dcebe86c6a61e1"
    }
  }
]